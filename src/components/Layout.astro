---
import type { ImageMetadata } from "astro";
import { getImage } from "astro:assets";
import "./style.scss";

interface Props {
	title: string;
	description: string;
	image: string | ImageMetadata;
	bgImage?: ImageMetadata;
	border?: ImageMetadata;
	icon?: ImageMetadata;
	css?: string;
}

const urlImage = new URL(typeof Astro.props.image === 'string' ? Astro.props.image : Astro.props.image.src, Astro.site).toString();
const accent = Astro.props.css?.match(/--accent-rgb: (.*?);/)?.[1] || '200, 70, 150';
const srcIcon = Astro.props.icon ? (await getImage({ src: Astro.props.icon, format: 'png', width: 32, height: 32 })).src : new URL('/assets/image/SweetHeart Squad - icon.png', Astro.site).toString();
---
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="theme-color" content={`rgb(${accent})`} />
	<link href={srcIcon} type="image/png" rel="icon shortcut" />

	<title>{Astro.props.title}</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">

	{/* GENERAL SEARCH INFO */}
	<meta name="author" content="SweetHeart Squad" />
	<meta name="copyright" content="SweetHeart Squad" />
	<meta name="description" content={Astro.props.description}>
	<link rel="canonical" href={Astro.url.toString()} />

	{/* OPENGRAPH TAGS */}
	<meta property="og:title" content="SweetHeart Squad" />
	<meta property="og:site_name" content="SweetHeart Squad" />
	<meta property="og:type" content="website" />
	<meta property="og:url" content={Astro.url.toString()} />
	<meta property="og:image" content={urlImage} />


	{/* TWITTER CARD */}
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:site" content="@SweetHeartSquad" />
	<meta name="twitter:creator" content="SweetHeart Squad" />
	<meta name="twitter:url" content={Astro.url.toString()} />
	<meta name="twitter:title" content={Astro.props.title} />
	<meta name="twitter:description" content={Astro.props.description} />
	<meta name="twitter:image" content={urlImage} />

	<link rel="sitemap" href="/sitemap-index.xml" />

	<link rel="stylesheet" type="text/css" href="assets/css/styles.css" />

	<slot name="head" />
	<style set:text={Astro.props.css}></style>
</head>

<body class={Astro.props.border ? 'has-border': ''} style={{
	backgroundImage: Astro.props.bgImage ? `url("${Astro.props.bgImage.src}")` : undefined,
}}>
	{Astro.props.border && <div class="border" style={{
	borderImageSource: Astro.props.border ? `url("${Astro.props.border.src}")` : undefined,
	borderImageWidth: Astro.props.border ? `0 ${Astro.props.border.width / 2}px` : undefined,
	maxWidth: `${(Astro.props.border ? Astro.props.border.width : 0) + 1280}px`,
}} />}
	{Astro.routePattern !== '/' && <a class="back-to-home" href="/" title="Back to homepage"></a>}
	<slot />
</body>

</html>
